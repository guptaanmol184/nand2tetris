// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load ,sel=address[12..13] ,a=loadRAM4K0 ,b=loadRAM4K1 ,c=loadRAM4K2 ,d=loadRAM4K3);

    RAM4K(in=in ,load=loadRAM4K0 ,address=address[0..11] ,out=outRAM4K0);
    RAM4K(in=in ,load=loadRAM4K1 ,address=address[0..11] ,out=outRAM4K1);
    RAM4K(in=in ,load=loadRAM4K2 ,address=address[0..11] ,out=outRAM4K2);
    RAM4K(in=in ,load=loadRAM4K3 ,address=address[0..11] ,out=outRAM4K3);

    Mux4Way16(a=outRAM4K0 ,b=outRAM4K1 ,c=outRAM4K2 ,d=outRAM4K3 ,sel=address[12..13] ,out=out); 

}