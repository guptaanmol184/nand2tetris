// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load ,sel=address[6..8] ,a=loadRAM640 ,b=loadRAM641 ,c=loadRAM642 ,d=loadRAM643 ,e=loadRAM644 ,f=loadRAM645 ,g=loadRAM646 ,h=loadRAM647 );

    RAM64(in=in ,load=loadRAM640 ,address=address[0..5] ,out=outRAM640);
    RAM64(in=in ,load=loadRAM641 ,address=address[0..5] ,out=outRAM641);
    RAM64(in=in ,load=loadRAM642 ,address=address[0..5] ,out=outRAM642);
    RAM64(in=in ,load=loadRAM643 ,address=address[0..5] ,out=outRAM643);
    RAM64(in=in ,load=loadRAM644 ,address=address[0..5] ,out=outRAM644);
    RAM64(in=in ,load=loadRAM645 ,address=address[0..5] ,out=outRAM645);
    RAM64(in=in ,load=loadRAM646 ,address=address[0..5] ,out=outRAM646);
    RAM64(in=in ,load=loadRAM647 ,address=address[0..5] ,out=outRAM647);

    Mux8Way16(a=outRAM640 ,b=outRAM641 ,c=outRAM642 ,d=outRAM643 ,e=outRAM644 ,f=outRAM645 ,g=outRAM646 ,h=outRAM647 ,sel=address[6..8] ,out=out);
}